# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S %Z)(utc)} - {h({l})} - {t} - {T} - {m}{n}"

  rolling_log_file:
    kind: rolling_file
    path: "logs/dblogd.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 50mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "logs/dblogd.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S %Z)(utc)} - {h({l})} - {t} - {T} - {m}{n}"

# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: warn
  appenders:
    - stdout

loggers:
  dblogd:
    level: info
    appenders:
      - stdout
      - rolling_log_file
    additive: false

  dblogd::db:
    level: info
    appenders:
      - stdout
      - rolling_log_file
    additive: false

  dblogd::socket:
    level: info
    appenders:
      - stdout
      - rolling_log_file
    additive: false

  dblogd::socket::tls:
    level: info
      appenders:
        - stdout
        - rolling_log_file
      additive: false